@page "/components/table"
<LayoutContent AnchorItems="@(new[]{"基础表格","斑马纹表格","边框表格","鼠标悬浮行","固定顶部", "加载状态","空表格","可分页的表格", "API"})">
<PageHeader Title="Table 表格">
    表格常用于展示同类结构下的多种数据，易于组织、对比和分析等，并可对数据进行搜索、筛选、排序等操作。一般包括表头、数据行和表尾三部分。
</PageHeader>

<h2>表格分类</h2>
<p>随着表格功能越来越多，如果把所有的功能都集中在一个组件里面，代码文件会越来越臃肿。既不利于维护，也不利于按需引入必要功能的业务。</p>
<p>
    因此，表格组件有三个：BaseTable（基础表格）、PrimaryTable（主表格）、EnhancedTable（增强型表格）。
</p>

<Example Title="基础表格">
    <Description>简单表格，使用边框线、斑马纹等清晰呈现各数据单元格边界线，辅助信息区隔。</Description>
    <RunContent>
            <TTable TItem="User" Data="User.GetData()">
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
                </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData()"">
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
        </TTableFieldColumn>
</TTable>
```
")
    </CodeContent>
</Example>
    
<Example Title="斑马纹表格">
    <Description>设置 <code>Striped</code> 让表格具备颜色间隔</Description>
    <RunContent>
        <TTable TItem="User" Data="User.GetData()" Striped>
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
            </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData()"" Striped>
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>
```
")
    </CodeContent>
</Example>

<Example Title="边框表格">
    <Description>设置 <code>Bordered</code> 让表格每个列都显示边框</Description>
    <RunContent>
            <TTable TItem="User" Data="User.GetData()" Bordered>
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
            </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData()"" Bordered>
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>
```
")
    </CodeContent>
</Example>

<Example Title="鼠标悬浮行">
    <Description>设置 <code>Hoverable</code> 鼠标悬停行会有颜色高亮</Description>
    <RunContent>
        <TTable TItem="User" Data="User.GetData()" Hoverable>
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
            </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData()"" Hoverable>
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>
```
")
    </CodeContent>
</Example>

    
<Example Title="固定顶部">
    <Description>设置 <code>FixedHeader</code> 可以固定顶部列，但同时要设置 <code>FixedHeight</code> 定义内容部分的高度</Description>
    <RunContent>
        <TTable TItem="User" Data="User.GetData(20)" FixedHeader FixedHeight="200">
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
            </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData(20)"" FixedHeader FixedHeight=""200"">
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>
```
")
    </CodeContent>
    </Example>
    <Example Title="加载状态">
    <Description>普通加载，会在表格上面显示半透明加载层，表格内容不隐藏。</Description>
    <RunContent>
        <TTable TItem="User" Data="User.GetData()" Loading>
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
                </TTableFieldColumn>
        </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""User.GetData()"" Loading=""Loading"">
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
        </TTableFieldColumn>
</TTable>
```
```cs
@code{
    bool Loading = true;
}
```
")
    </CodeContent>
</Example>
 <Example Title="空表格">
        <Description>使用默认空表格样式。可使用 <code>EmptyContent</code> 自定义空表格模板</Description>
    <RunContent>
            <TTable TItem="User" Data="new List<User>()">
            <TTableFieldColumn Value="context?.Id" Title="Id" />
            <TTableFieldColumn Value="context?.Name" Title="姓名" />
            <TTableFieldColumn Value="context?.Age" Title="年龄" />
            <TTableFieldColumn Title="性别">
                @if (context is not null)
                {
                    if (context.Gender)
                    {
                        <TTag Theme="Theme.Primary">男</TTag>
                    }
                    else
                    {
                        <TTag Theme="Theme.Danger">女</TTag>
                    }
                }
                </TTableFieldColumn>
        </TTable>

            <TTable TItem="User" Data="new List<User>()">
                <ChildContent>
                <TTableFieldColumn Value="context?.Id" Title="Id" />
                <TTableFieldColumn Value="context?.Name" Title="姓名" />
                <TTableFieldColumn Value="context?.Age" Title="年龄" />
                <TTableFieldColumn Title="性别">
                    @if ( context is not null )
                    {
                        if ( context.Gender )
                        {
                            <TTag Theme="Theme.Primary">男</TTag>
                        }
                        else
                        {
                            <TTag Theme="Theme.Danger">女</TTag>
                        }
                    }
                </TTableFieldColumn>
                </ChildContent>
                <EmptyContent>
                    自定义空模板
                </EmptyContent>
            </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<TTable TItem=""User"" Data=""new List<User>()"">
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if (context is not null)
        {
            if (context.Gender)
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>

<TTable TItem=""User"" Data=""new List<User>()"">
    <ChildContent>
        <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
        <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
        <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
        <TTableFieldColumn Title=""性别"">
            @if (context is not null)
            {
                if (context.Gender)
                {
                    <TTag Theme=""Theme.Primary"">男</TTag>
                }
                else
                {
                    <TTag Theme=""Theme.Danger"">女</TTag>
                }
            }
        </TTableFieldColumn>
    </ChildContent>
    <EmptyContent>
        自定义空模板
    </EmptyContent>
</TTable>
```
")
    </CodeContent>
</Example>
    <Example Title="可分页的表格">
    <Description>
        参数 <code>Data</code> 是静态数据。动态数据则使用 <code>DataQuery</code> 参数，它是一个委托。
    </Description>
    <RunContent>
            <h3>静态数据</h3>
            <TTable TItem="User" Data="User.GetData(30)" Pagination>
                <TTableFieldColumn Value="context?.Id" Title="Id" />
                <TTableFieldColumn Value="context?.Name" Title="姓名" />
                <TTableFieldColumn Value="context?.Age" Title="年龄" />
                <TTableFieldColumn Title="性别">
                    @if ( context is not null )
                    {
                        if ( context.Gender )
                        {
                            <TTag Theme="Theme.Primary">男</TTag>
                        }
                        else
                        {
                            <TTag Theme="Theme.Danger">女</TTag>
                        }
                    }
                </TTableFieldColumn>
            </TTable>
            <h3>动态数据</h3>
            <TTable TItem="User" Data="DataSource<User>.Parse(TablePage.Mock)" Pagination>
                <TTableFieldColumn Value="context?.Id" Title="Id" />
                <TTableFieldColumn Value="context?.Name" Title="姓名" />
                <TTableFieldColumn Value="context?.Age" Title="年龄" />
                <TTableFieldColumn Title="性别">
                    @if ( context is not null )
                    {
                        if ( context.Gender )
                        {
                            <TTag Theme="Theme.Primary">男</TTag>
                        }
                        else
                        {
                            <TTag Theme="Theme.Danger">女</TTag>
                        }
                    }
                </TTableFieldColumn>
            </TTable>
    </RunContent>
    <CodeContent>
        @Code.Create(@"
```html
<h3>静态数据</h3>
<TTable TItem=""User"" Data=""User.GetData(30)"" Pagination>
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if ( context is not null )
        {
            if ( context.Gender )
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>

<h3>动态数据</h3>
<TTable TItem=""User"" Data=""DataSource<User>.Parse(TablePage.Mock)"" Pagination>
    <TTableFieldColumn Value=""context?.Id"" Title=""Id"" />
    <TTableFieldColumn Value=""context?.Name"" Title=""姓名"" />
    <TTableFieldColumn Value=""context?.Age"" Title=""年龄"" />
    <TTableFieldColumn Title=""性别"">
        @if ( context is not null )
        {
            if ( context.Gender )
            {
                <TTag Theme=""Theme.Primary"">男</TTag>
            }
            else
            {
                <TTag Theme=""Theme.Danger"">女</TTag>
            }
        }
    </TTableFieldColumn>
</TTable>
```
```cs
static async Task<(IEnumerable<User> data,int count)> Mock(int take,int skip)
{
    await Task.Delay(1000);

    //模拟远程取数据的代码
    var result = User.GetData(50); 
    var count = result.Count;
    var data = result.Take(take).Skip(skip);
    return (data,count);
}
```
")
    </CodeContent>
</Example>
<div id="API"></div>
<ComponentAPI Component="typeof(TTable<>)" Title="TTable"></ComponentAPI>
</LayoutContent>


